
networks:
  skeletonbr:
    driver: bridge

services:
###> doctrine/doctrine-bundle ###
  php:
    container_name: 'php-skeleton'
    networks:
      - skeletonbr
    build:
      context: ./docker/php
    volumes:
      - '.:/var/www/html'
      - './docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro'
    environment:
      COMPOSER_MEMORY_LIMIT: 2G
    working_dir: '/var/www/html'
    extra_hosts:
      # for step debugging with Xdebug
      - 'host.docker.internal:host-gateway'
  nginx:
      container_name: 'nginx-skeleton'
      build:
        context: ./docker/nginx
      networks:
        - skeletonbr
      depends_on:
        - php
      ports:
        - 8080:80
      volumes:
        - '.:/var/www/html'
        - './docker/nginx/conf.d/default.nginx:/etc/nginx/conf.d/default.conf'
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-users}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-12345}
      POSTGRES_USER: ${POSTGRES_USER:-admin}
    healthcheck:
      test: ["CMD", "pg_isready -U ${POSTGRES_USER:-admin}"]
      timeout: 5s
      retries: 5
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - skeletonbr
    ports:
      - '5432:5432'
    working_dir: /app
    restart: always
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
